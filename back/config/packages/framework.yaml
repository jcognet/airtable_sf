# see https://symfony.com/doc/current/reference/configuration/framework.html
framework:
  secret: '%env(APP_SECRET)%'
  #csrf_protection: true
  http_method_override: false

  # Enables session support. Note that the session will ONLY be started if you read or write from it.
  # Remove or comment this section to explicitly disable session support.
  session:
    handler_id: null
    cookie_secure: auto
    cookie_samesite: lax
    storage_factory_id: session.storage.factory.native

  #esi: true
  #fragments: true
  php_errors:
    log: true

  http_client:
    scoped_clients:
      airtable.client:
        base_uri: https://api.airtable.com/v0/
        headers:
          Accept: 'application/json'
          Authorization: 'Bearer %env(AIRTABLE_API_KEY)%'
      meteo.client:
        base_uri: https://api.meteo-concept.com/api/
        query:
          token: '%env(METEO_API_TOKEN)%'
        headers:
          Accept: 'application/json'
      rgesn.client:
        base_uri: https://lowdit.github.io/rgesn/2.0/
      ecoresponsablegouv.client:
        base_uri: '%ecoresponsaglegouvBaseUrl%'
      inr.client:
        base_uri: https://sustainableit-tools.isit-europe.org/
      inr.491_client:
        base_uri: '%inr491BaseUrl%'
      githubrepository.client:
        base_uri: https://api.github.com/repos/jcognet/airtable_sf/
        headers:
          Accept: 'application/vnd.github.v3+json'
          Authorization: 'token %env(GITHUB_API_TOKEN)%'
      lpo.client:
        base_uri: '%lpoBaseUrl%'
      google.place.api.client:
        base_uri: https://maps.googleapis.com/maps/api/place/
        query:
          key: '%env(GOOGLE_API_KEY)%'
          language: 'fr'

when@test:
  framework:
    test: true
    mailer:
      dsn: 'null://null'
    session:
      storage_factory_id: session.storage.factory.mock_file
