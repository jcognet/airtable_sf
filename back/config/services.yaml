# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    bind:
      $airtableAppArticleId: '%env(AIRTABLE_APP_ARTICLE_ID)%'
      $airtableAppBiereId: '%env(AIRTABLE_APP_BIERE_ID)%'
      $airtableAppToDoId: '%env(AIRTABLE_APP_TO_DO_ID)%'
      $airtableAppBookId: '%env(AIRTABLE_APP_BOOK_ID)%'
      $mailerFrom: '%env(MAILER_FROM)%'
      $mailerTo: '%env(MAILER_TO)%'
      $projectDir: '%kernel.project_dir%'
      $githubSecret: '%env(GITHUB_SECRET)%'
      $pathToConfigurationYaml: '%kernel.project_dir%/config/blocks/'
      $deployJsonPath: '%kernel.project_dir%/src/Data/deploy.json'
      $googleCredentialFile: '%kernel.project_dir%/config/google_credential.json'
      $spreadSheetAirtableId: '%env(GOOGLE_SPREADSHEET_EXPORT_ID)%'
      $progressContentUrl: '%env(GOOGLE_PROGRESS_CONTENT_URL)%'

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/'
    exclude:
      - '../src/DependencyInjection/'
      - '../src/Entity/'
      - '../src/Kernel.php'
      - '../src/Tests/'
      - '../src/ValueObject/'

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones

  # this config only applies to the services created by this file
  _instanceof:
    App\Service\Block\BlockManagerInterface:
      tags: ['app.block_manager']

  App\Service\NewsletterManager\ManagerContentFactory:
    arguments:
      - !tagged_iterator app.block_manager
